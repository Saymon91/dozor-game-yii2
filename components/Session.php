<?php

namespace app\components;
use yii\web\Session as Yiisession;
use Yii;

class Session extends Yiisession
{
    private $timeout = 24 * 60 * 60;
    public $useCustomStorage = true;

    public function closeSession()
    {
        return parent::closeSession(); // TODO: Change the autogenerated stub
    }

    public function destroySession($id)
    {
        return parent::destroySession($id); // TODO: Change the autogenerated stub
    }

    public function openSession($savePath, $sessionName)
    {
        return parent::openSession($savePath, $sessionName); // TODO: Change the autogenerated stub
    }

    public function readSession($id)
    {
        $_SESSION = json_decode(Yii::$app->sessions_store->get($id));
        return parent::readSession($id); // TODO: Change the autogenerated stub
    }

    public function writeSession($id, $data)
    {
        return Yii::$app->user->isGuest
            ? Yii::$app->sessions_store->set($id, json_encode($_SESSION), $this->getTimeout())
            : true;
    }

    public function setTimeout($value)
    {
        $this->timeout = $value;
    }

    public function setId($value)
    {
        parent::setId($value); // TODO: Change the autogenerated stub
    }

}